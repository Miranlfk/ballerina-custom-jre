name: Publish MacOS-ARM release

on:
  workflow_dispatch:
  
permissions:
  id-token: write 
  contents: write

jobs:
  get_release_version:
    name: Get Release Version
    runs-on: ubuntu-latest
#     if: github.repository_owner == 'ballerina-platform'
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: execute
        run: |
          export VERSION="$((grep -w 'version' | cut -d= -f2) < gradle.properties | cut -d- -f1)"
          echo "::set-output name=version::${VERSION}"
    outputs:
      version: ${{steps.execute.outputs.version}}
  update_release:
    needs: get_release_version
    name: Update Release
    runs-on: ubuntu-latest
#     if: github.repository_owner == 'ballerina-platform'
    outputs:
      upload_url: ${{ steps.update_release.outputs.upload_url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.0.3
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install GitHub CLI
        run: |
          npm install -g github-cli
          gh --version
      - name: Retrieve MacOS-ARM Artifact
        run:
          |
          wget https://github.com/${{ github.actor }}/ballerina-custom-jre/releases/download/${{ needs.get_release_version.outputs.version }}/ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
      - name: Sign the MacOS-ARM Artifact
        run: |
          cosign sign-blob ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip --output-certificate ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem --output-signature ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig --yes
      - name: Verify the MacOS-ARM Artifact
        run: |
          cosign verify-blob ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip --certificate ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem --signature ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig --certificate-identity=https://github.com/${{ github.actor }}/ballerina-custom-jre/.github/workflows/publish-mac-arm.yml@refs/heads/main --certificate-oidc-issuer=https://token.actions.githubusercontent.com 
      # - uses: IsaacShelton/update-existing-release@v1.3.2
      #   with:
      #     token: ${{secrets.GITHUB_TOKEN}}
      #     release: ${{ needs.get_release_version.outputs.version }}
      #     tag: ${{ needs.get_release_version.outputs.version }}
      #     replace: false
      #     files: >
      #       ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
      #       ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem
      #       ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig
      # - name: Get release ID
      #   id: get_release_id
      #   run: |
      #     release_id=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ needs.get_release_version.outputs.version }}" \
      #       -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       | jq -r '.id')

      #     echo "::set-output name=release_id::${release_id}"

      - name: Get asset ID
        id: get_asset_id
        run: |
          release_id=${{ steps.get_release_id.outputs.release_id }}
          asset_id=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/${release_id}/assets" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            | jq -r ".[] | select(.name == \"ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip\") | .id")

          echo "::set-output name=asset_id::${asset_id}"

#       - name: Delete asset
#         run: |
#           release_id=${{ steps.get_release_id.outputs.release_id }}
#           asset_id=${{ steps.get_asset_id.outputs.asset_id }}

#           curl \
#             --request DELETE \
#             --url "https://api.github.com/repos/${{ github.repository }}/releases/${release_id}/assets/${asset_id}" \
#             --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

      # - name: Upload MacOS-ARM artifact
      #   run: |
      #     release_id=${{ steps.get_release_id.outputs.release_id }}
      #     upload_url="https://uploads.github.com/repos/${{ github.repository }}/releases/${release_id}/assets?name=ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip"

      #     curl \
      #       --request POST \
      #       --url $upload_url \
      #       --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       --header "Content-Type: $(file -b --mime-type ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip)" \
      #       --data-binary @./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
      
      # - name: Upload MacOS-ARM Certificate
      #   run: |
      #     release_id=${{ steps.get_release_id.outputs.release_id }}
      #     upload_url="https://uploads.github.com/repos/${{ github.repository }}/releases/${release_id}/assets?name=ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem"

      #     curl \
      #       --request POST \
      #       --url $upload_url \
      #       --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       --header "Content-Type: $(file -b --mime-type ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem)" \
      #       --data-binary @./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem

      # - name: Upload MacOS-ARM Signature
      #   run: |
      #     release_id=${{ steps.get_release_id.outputs.release_id }}
      #     upload_url="https://uploads.github.com/repos/${{ github.repository }}/releases/${release_id}/assets?name=ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig"

      #     curl \
      #       --request POST \
      #       --url $upload_url \
      #       --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       --header "Content-Type: $(file -b --mime-type ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig)" \
      #       --data-binary @./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig

      - name: Update MacOS-ARM Release Assets
        env:
          GH_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.get_release_version.outputs.version }} ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip --clobber
          gh release upload ${{ needs.get_release_version.outputs.version }} ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem
          gh release upload ${{ needs.get_release_version.outputs.version }} ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig
