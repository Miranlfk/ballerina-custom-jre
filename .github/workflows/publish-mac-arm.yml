name: Publish MacOS-ARM release

on:
  workflow_dispatch:
  # release:
  #   types: [created]
  
permissions:
  id-token: write 
  contents: write

jobs:
  get_release_version:
    name: Get Release Version
    runs-on: ubuntu-latest
#     if: github.repository_owner == 'ballerina-platform'
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: execute
        run: |
          export VERSION="$((grep -w 'version' | cut -d= -f2) < gradle.properties | cut -d- -f1)"
          echo "::set-output name=version::${VERSION}"
    outputs:
      version: ${{steps.execute.outputs.version}}
  update_release:
    needs: get_release_version
    name: Update Release
    runs-on: ubuntu-latest
#     if: github.repository_owner == 'ballerina-platform'
    outputs:
      upload_url: ${{ steps.update_release.outputs.upload_url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.0.3
      # - uses: tubone24/setup-nim-action@v1.0.1
      # - name: Update Release
      #   id: update_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     overwrite: true
      #     tag_name: ${{ needs.get_release_version.outputs.version }}
      #     release_name: ${{ needs.get_release_version.outputs.version }}
      #     draft: false
      #     prerelease: false
      # - name: update release
      #   id: update_release
      #   uses: tubone24/update_release@v1.0
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}

      - name: Retrieve MacOS-ARM Artifact
        run:
          |
          wget https://github.com/${{ github.actor }}/ballerina-custom-jre/releases/download/${{ needs.get_release_version.outputs.version }}/ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
      - name: Sign the MacOS-ARM Artifact
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign-blob ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip --output-certificate ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem --output-signature ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig --yes
      - name: Verify the MacOS-ARM Artifact
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign verify-blob ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip --certificate ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem --signature ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig --certificate-identity=https://github.com/${{ github.actor }}/ballerina-custom-jre/.github/workflows/publish-mac-arm.yml@refs/heads/main --certificate-oidc-issuer=https://token.actions.githubusercontent.com 
      - uses: IsaacShelton/update-existing-release@v1.3.2
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          release: ${{ needs.get_release_version.outputs.version }}
          tag: ${{ needs.get_release_version.outputs.version }}
          replace: false
          files: >
            ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
            ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem
            ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig
      # - name: Upload MacOS-ARM Artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.update_release.outputs.upload_url }}
      #     asset_name: ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
      #     asset_path: ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
      #     asset_content_type: application/octet-stream
      # - name: Upload Certifacte of the MacOS-ARM Artifact to GitHub release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url:  ${{ steps.update_release.outputs.upload_url }}
      #     asset_name: ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem
      #     asset_path: ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.pem
      #     asset_content_type: application/octet-stream
      # - name: Upload Signature of the MacOS-ARM Artifact to GitHub release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.update_release.outputs.upload_url }}
      #     asset_name: ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig
      #     asset_path: ./ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.sig
      #     asset_content_type: application/octet-stream
  # release_assets:
  #   name: Release assets
  #   needs: [ get_release_version, update_release ]
  #   runs-on: ubuntu-latest
  #   steps:
  #       - name: Checkout Code
  #         uses: actions/checkout@v2
  #       - name: cosign-installer
  #         uses: sigstore/cosign-installer@v3.0.3
  #       - uses: tubone24/setup-nim-action@v1.0.1
  #       - name: update release
  #         id: update_release
  #         uses: tubone24/update_release@v1.0
  #         env:
  #           GITHUB_TOKEN: ${{ github.token }}
  #         with:
  #           tag_name: ${{ needs.get_release_version.outputs.version }}
  #           release_name: ${{ needs.get_release_version.outputs.version }}
  #           draft: false
  #           prerelease: false
  #       - name: Upload Release Asset
  #         uses: actions/upload-release-asset@v1
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         with:
  #           upload_url: ${{ needs.create_release.outputs.upload_url }}
  #           asset_name: post_twitter_on_work_${{ runner.os }}_${{ steps.get_version.outputs.VERSION }}${{ matrix.asset_name_suffix }}
  #           asset_path: /mac-arm/ballerina-jre-macos-arm-64-${{ needs.get_release_version.outputs.version }}.zip
  #           asset_content_type: application/octet-stream